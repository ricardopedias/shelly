
testText()
{
    assertEquals "‚úñ √≠cone de erro" "$(showText error √≠cone de erro)"
    assertEquals "‚úî √≠cone de ok" "$(showText ok √≠cone de ok)"
    assertEquals "‚óè √≠cone de ponto" "$(showText dot √≠cone de ponto)"
    assertEquals "üñù √≠cone de indicador" "$(showText hand √≠cone de indicador)"
    assertEquals "üñù √≠cone de indicador" "$(showText hand √≠cone de indicador)"
    assertEquals "‚ñ∫ √≠cone de ceta" "$(showText arrow √≠cone de ceta)"
    assertEquals "  espa√ßo alinhado" "$(showText space espa√ßo alinhado)"
    assertEquals "somente texto" "$(showText none somente texto)"
}

testMessages()
{   
    assertEquals "$(inRed ‚úñ mensagem textual)" "$(showError mensagem textual)"
    assertEquals "$(inBlue üñù mensagem textual)" "$(showInfo mensagem textual)"
    assertEquals "  mensagem textual" "$(showMuted mensagem textual)"
    assertEquals "$(inGreen ‚úî mensagem textual)" "$(showSuccess mensagem textual)"
    assertEquals "$(inYellow ‚óè mensagem textual)" "$(showWarning mensagem textual)"
    assertEquals "‚ñ∫ mensagem textual" "$(showItem mensagem textual)"
}

testCheckbox()
{
    assertEquals \
        "$(echo -e Mensagem textual $(startGreen)[YES]$(endGreen))" \
        "$(showCheckbox yes Mensagem textual)"

    assertEquals \
        "$(echo -e Mensagem textual $(startRed)[NO]$(endRed))" \
        "$(showCheckbox no Mensagem textual)"
    
    assertEquals \
        "$(echo -e Mensagem textual $(startBlue)[Yeah Man]$(endBlue))" \
        "$(showCheckbox Yeah_Man Mensagem textual)"
}

source $DSETUP_INIT
source $DSETUP_SHUNIT
